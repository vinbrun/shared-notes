name: Docker Build

on:
  push:
    branches:
      - develop
      - main
    tags:
      - 'v*.*.*'
    paths:
      - 'frontend/**'
      - 'backend/**'
  workflow_dispatch:

env:
  FRONTEND_IMAGE_NAME: vinbrun/sharednotes-frontend
  BACKEND_IMAGE_NAME: vinbrun/sharednotes-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine Changed Folders
        id: changes
        run: |
          # Set the base commit to HEAD~1 to compare with the last commit
          BASE_COMMIT=$(git rev-parse HEAD~1)
          CURRENT_COMMIT=$(git rev-parse HEAD)

          # Get list of changed files between the last two commits
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT $CURRENT_COMMIT)
          
          # Check if frontend or backend has changed
          if echo "$CHANGED_FILES" | grep -q '^frontend/'; then
            echo "frontend_changed=true" >> $GITHUB_ENV
          else
            echo "frontend_changed=false" >> $GITHUB_ENV
          fi
          if echo "$CHANGED_FILES" | grep -q '^backend/'; then
            echo "backend_changed=true" >> $GITHUB_ENV
          else
            echo "backend_changed=false" >> $GITHUB_ENV
          fi

      - name: Set VERSION for Image Tagging
        id: set-version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          elif [[ "$GITHUB_REF" == "refs/heads/develop" ]]; then
            VERSION=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")-dev
          else
            VERSION=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Build and Push Frontend Docker Image
        if: env.frontend_changed == 'true'
        run: |
          echo "Building Frontend Docker image with tag: $VERSION"
          if [[ "$GITHUB_REF" == "refs/heads/develop" ]]; then
            docker build -t $FRONTEND_IMAGE_NAME:$VERSION -f ./frontend/Dockerfile.dev ./frontend
          else
            docker build -t $FRONTEND_IMAGE_NAME:$VERSION -f ./frontend/Dockerfile ./frontend
          fi
          echo "Pushing Frontend Docker image: $FRONTEND_IMAGE_NAME:$VERSION"
          docker push $FRONTEND_IMAGE_NAME:$VERSION

      - name: Build and Push Backend Docker Image
        if: env.backend_changed == 'true'
        run: |
          echo "Building Backend Docker image with tag: $VERSION"
          if [[ "$GITHUB_REF" == "refs/heads/develop" ]]; then
            docker build -t $BACKEND_IMAGE_NAME:$VERSION -f ./backend/Dockerfile.dev ./backend
          else
            docker build -t $BACKEND_IMAGE_NAME:$VERSION -f ./backend/Dockerfile ./backend
          fi
          echo "Pushing Backend Docker image: $BACKEND_IMAGE_NAME:$VERSION"
          docker push $BACKEND_IMAGE_NAME:$VERSION

      - name: Tag Latest for Production
        if: github.ref == 'refs/heads/main' && (env.frontend_changed == 'true' || env.backend_changed == 'true')
        run: |
          docker tag $FRONTEND_IMAGE_NAME:$VERSION $FRONTEND_IMAGE_NAME:latest
          docker tag $BACKEND_IMAGE_NAME:$VERSION $BACKEND_IMAGE_NAME:latest
          docker push $FRONTEND_IMAGE_NAME:latest
          docker push $BACKEND_IMAGE_NAME:latest
